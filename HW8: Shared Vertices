
import * as THREE from 'https://threejsfundamentals.org/threejs/resources/threejs/r132/build/three.module.js';

import { OrbitControls } from 'https://cdn.jsdelivr.net/npm/three@0.121.1/examples/jsm/controls/OrbitControls.js';

var renderer = new THREE.WebGLRenderer();
renderer.setClearColor(new THREE.Color(0x000000));
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );

var camera = new THREE.PerspectiveCamera( 45, window.innerWidth/window.innerHeight, 0.1, 1000 );

var scene = new THREE.Scene();

var axes = new THREE.AxesHelper(20);
scene.add(axes);

const vertices = [
0,0,0, 1,0,0, 0,1,0,  
1,1,0, 0,0,1, 1,0,1, 
0,1,1, 1,1,1
];

const indicesOfFaces = [
    0,1,3,    0,3,2,
    1,5,7,		1,7,3,
    5,4,6,		5,6,7,
    4,5,1,		4,1,0,
    2,3,7,		2,7,6,
    4,0,2,		4,2,6
];

const geometry = new THREE.PolyhedronGeometry( vertices, indicesOfFaces, 1, 0 );

geometry.computeVertexNormals ();


const wireframe = new THREE.WireframeGeometry( geometry );
const sline = new THREE.LineSegments( wireframe );
sline.material.depthTest = false;
sline.material.opacity = 0.75;
sline.material.transparent = true;
sline.position.set(0,0,0);
scene.add( sline );

camera.position.set(5, 5, 5); 

var controls = new OrbitControls (camera, renderer.domElement);

var color = 0xFFFFFF;
var intensity = 10;
var light = new THREE.AmbientLight(color, intensity);
scene.add(light);

var animate = function(){
	requestAnimationFrame(animate);
	renderer.render( scene, camera );
  controls.update();
}

animate();




